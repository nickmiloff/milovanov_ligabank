{"version":3,"sources":["const.js","services/api.js","store/converter/actions.js","store/converter/types.js","services/load-statuses.js","store/converter/reducer.js","store/store.js","store/converter/operations.js","assets/img/logo.svg","components/footer/footer.jsx","components/header/header.jsx","store/converter/selectors.js","components/currency-input/currency-input.jsx","components/calendar/calendar.jsx","components/button/button.jsx","prop-types.prop.js","components/history-item/history-item.jsx","components/history-list/history-list.jsx","components/history/history.jsx","components/converter/converter.jsx","components/link/link.jsx","components/promo/promo.jsx","components/main/main.jsx","components/app/app.jsx","index.js"],"names":["CURRENCIES","SYMBOLS_CURRENCYS","join","setLoaded","createAction","loaded","payload","setHaveCurrency","currency","setHaveValue","value","setWantCurrency","setWantValue","setDate","date","addOrder","nanoid","clearHistory","setRates","rates","Statuses","toFixedTwo","number","Math","round","initialState","RUB","USD","EUR","GBP","CNY","have","want","Date","now","history","converterReducer","createReducer","builder","addCase","actions","state","newWantValue","newHaveValue","newHistory","order","key","unshift","slice","rate","hasOwnProperty","api","axios","baseURL","headers","params","timeout","interceptors","response","use","err","createAPI","store","configureStore","reducer","converter","middleware","getDefaultMiddleware","thunk","extraArgument","loadRates","dispatch","getState","dateObj","get","toISOString","then","data","getTime","catch","Footer","className","href","src","logoImg","alt","width","height","xlinkHref","Header","getHaveValue","getHaveCurrency","getWantValue","getWantCurrency","getDate","getHistory","getLoaded","CurrencyInput","additionalClass","title","onValueChange","onCurrencyChange","disabled","useState","isMenuOpen","setIsMenuOpen","type","onChange","evt","target","placeholder","aria-label","onClick","current","map","item","index","Calendar","onDateChange","maxDate","minDate","wrapperClassName","selected","dateFormat","Button","children","React","memo","currencyInputPropTypes","PropTypes","oneOf","isRequired","DATE_OPTIONS","shape","string","day","month","year","HistoryItem","dateTime","toLocaleString","HistoryList","orders","History","onClearButtonClick","isEmpty","length","mapDispatchToProps","onHaveValueChange","onHaveCurrencyChange","onWantValueChange","onWantCurrencyChange","onSaveButtonClick","connect","haveValue","haveCurrency","wantValue","wantCurrency","isLoadedCorrectly","isErrored","action","method","Link","Promo","Main","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f8f0911.chunk.js","sourcesContent":["export const CURRENCIES = [`RUB`, `USD`, `EUR`, `GBP`, `CNY`];\n","import * as axios from 'axios';\n\nimport {CURRENCIES} from '../const';\n\nconst BASE_URL = `https://api.currencyscoop.com/v1/historical/`;\nconst REQUEST_TIMEOUT = 5000;\n\nconst SYMBOLS_CURRENCYS = CURRENCIES.join(`,`);\n\nexport const createAPI = () => {\n  const api = axios.create({\n    baseURL: BASE_URL,\n    headers: {\n      \"Content-Type\": `application/json`,\n    },\n    params: {\n      \"api_key\": `a4d488335f5b33f28a6f1d2ce3cdee39`,\n      \"symbols\": SYMBOLS_CURRENCYS\n    },\n    timeout: REQUEST_TIMEOUT,\n  });\n\n  const onSuccess = (response) => response;\n\n  const onFail = (err) => {\n    throw err;\n  };\n\n  api.interceptors.response.use(onSuccess, onFail);\n\n  return api;\n};\n","import {createAction, nanoid} from '@reduxjs/toolkit';\nimport * as types from './types';\n\nexport const setLoaded = createAction(types.SET_LOADED, (loaded) => {\n  return {\n    payload: loaded\n  };\n});\n\nexport const setHaveCurrency = createAction(types.SET_HAVE_CURRENCY, (currency) => {\n  return {\n    payload: currency\n  };\n});\n\nexport const setHaveValue = createAction(types.SET_HAVE_VALUE, (value) => {\n  return {\n    payload: value\n  };\n});\n\nexport const setWantCurrency = createAction(types.SET_WANT_CURRENCY, (currency) => {\n  return {\n    payload: currency\n  };\n});\n\nexport const setWantValue = createAction(types.SET_WANT_VALUE, (value) => {\n  return {\n    payload: value\n  };\n});\n\nexport const setDate = createAction(types.SET_DATE, (date) => {\n  return {\n    payload: date\n  };\n});\n\nexport const addOrder = createAction(types.ADD_ORDER, () => {\n  return {\n    payload: nanoid()\n  };\n});\n\nexport const clearHistory = createAction(types.CLEAR_HISTORY, () => {\n  return {\n    payload: true\n  };\n});\n\nexport const setRates = createAction(types.SET_RATES, (rates) => {\n  return {\n    payload: rates\n  };\n});\n","export const SET_LOADED = `converter/setLoaded`;\nexport const SET_HAVE_CURRENCY = `converter/setFromCurrency`;\nexport const SET_HAVE_VALUE = `converter/setFromValue`;\nexport const SET_WANT_CURRENCY = `converter/setWantCurrency`;\nexport const SET_WANT_VALUE = `converter/setWantValue`;\nexport const SET_DATE = `converter/setDate`;\nexport const SET_RATES = `converter/setRates`;\nexport const ADD_ORDER = `converter/addOrder`;\nexport const CLEAR_HISTORY = `converter/clearHistory`;\n","export const Statuses = {\n  PENDING: `status/pending`,\n  LOAD: `status/load`,\n  LOADED: `status/loaded`,\n  ERROR: `status/error`\n};\n","import {createReducer} from '@reduxjs/toolkit';\nimport * as actions from './actions';\n\nimport {Statuses} from '../../services/load-statuses';\nimport {CURRENCIES} from '../../const';\n\nconst toFixedTwo = (number) => +(Math.round(number + `e+2`) + `e-2`);\n\nconst initialState = {\n  rates: {\n    RUB: 0,\n    USD: 0,\n    EUR: 0,\n    GBP: 0,\n    CNY: 0\n  },\n  have: {\n    currency: CURRENCIES[0],\n    value: 1\n  },\n  want: {\n    currency: CURRENCIES[1],\n    value: 1\n  },\n  date: Date.now(),\n  history: [],\n  loaded: Statuses.PENDING\n};\n\nconst converterReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(actions.setLoaded, (state, {payload}) => {\n      state.loaded = payload;\n    })\n    .addCase(actions.setHaveCurrency, (state, {payload}) => {\n      const newWantValue = state.have.value / state.rates[payload] * state.rates[state.want.currency];\n\n      state.have.currency = payload;\n      state.want.value = toFixedTwo(newWantValue);\n    })\n    .addCase(actions.setHaveValue, (state, {payload}) => {\n      const newWantValue = payload / state.rates[state.have.currency] * state.rates[state.want.currency];\n\n      state.have.value = toFixedTwo(payload);\n      state.want.value = toFixedTwo(newWantValue);\n    })\n    .addCase(actions.setWantCurrency, (state, {payload}) => {\n      const newWantValue = state.have.value / state.rates[state.have.currency] * state.rates[payload];\n\n      state.want.currency = payload;\n      state.want.value = toFixedTwo(newWantValue);\n    })\n    .addCase(actions.setWantValue, (state, {payload}) => {\n      const newHaveValue = payload / state.rates[state.want.currency] * state.rates[state.have.currency];\n\n      state.want.value = toFixedTwo(payload);\n      state.have.value = toFixedTwo(newHaveValue);\n    })\n    .addCase(actions.setDate, (state, {payload}) => {\n      state.date = payload;\n    })\n    .addCase(actions.addOrder, (state, {payload}) => {\n      const newHistory = [...state.history];\n      const order = {\n        date: state.date,\n        have: {...state.have},\n        want: {...state.want},\n        key: payload\n      };\n      newHistory.unshift(order);\n      state.history = newHistory.slice(0, 10);\n    })\n    .addCase(actions.clearHistory, (state) => {\n      state.history = [];\n    })\n    .addCase(actions.setRates, (state, {payload}) => {\n      for (const rate in payload) {\n        if (payload.hasOwnProperty(rate)) {\n          state.rates[rate] = payload[rate];\n        }\n      }\n    });\n});\n\nexport default converterReducer;\nexport {\n  initialState\n};\n","import {configureStore} from '@reduxjs/toolkit';\nimport {createAPI} from '../services/api';\n\nimport converterReducer from './converter/reducer';\n\nconst api = createAPI();\n\nconst store = configureStore({\n  reducer: {\n    converter: converterReducer\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api\n      }\n    })\n});\n\nexport default store;\n","import * as actions from './actions';\n\nimport {Statuses} from '../../services/load-statuses';\n\nexport const loadRates = (date) => (dispatch, getState, api) => {\n  const dateObj = new Date(date);\n  dispatch(actions.setLoaded(Statuses.LOAD));\n\n  return api\n    .get(`/`, {\n      params: {\n        \"date\": dateObj.toISOString().slice(0, 10)\n      }\n    })\n    .then(({data}) => {\n      dispatch(actions.setDate(dateObj.getTime()));\n      dispatch(actions.setRates(data.response.rates));\n      dispatch(actions.setHaveValue(getState().converter.have.value));\n      dispatch(actions.setLoaded(Statuses.LOADED));\n    })\n    .catch(() => {\n      dispatch(actions.setLoaded(Statuses.ERROR));\n    });\n};\n","export default __webpack_public_path__ + \"static/media/logo.65ddc6c9.svg\";","import React from 'react';\n\nimport logoImg from '../../assets/img/logo.svg';\n\nconst Footer = () => (\n  <footer className=\"page__footer footer\">\n    <div className=\"container\">\n      <div className=\"footer__company-info\">\n        <a className=\"footer__logo logo\" href=\"/\">\n          <img className=\"logo__img\" src={logoImg} alt=\"Логотип банка - Лига Банк\" width=\"150\" height=\"27\" />\n        </a>\n        <address className=\"footer__address\">\n          150015, г. Москва, ул. Московская, д. 32 Генеральная лицензия Банка России №1050 &#169; Лига Банк, 2019\n        </address>\n      </div>\n      <nav className=\"footer__nav secondary-nav\">\n        <ul className=\"secondary-nav__list\">\n          <li className=\"secondary-nav__item\">\n            <a className=\"secondary-nav__link\" href=\"#\">\n              Услуги\n            </a>\n          </li>\n          <li className=\"secondary-nav__item\">\n            <a className=\"secondary-nav__link\" href=\"#\">\n              Рассчитать кредит\n            </a>\n          </li>\n          <li className=\"secondary-nav__item\">\n            <a className=\"secondary-nav__link\" href=\"#\">\n              Контакты\n            </a>\n          </li>\n          <li className=\"secondary-nav__item\">\n            <a className=\"secondary-nav__link\" href=\"#\">\n              Задать вопрос\n            </a>\n          </li>\n        </ul>\n      </nav>\n      <div className=\"footer__phone phone\">\n        <a\n          className=\"phone__title\"\n          href=\"tel:*0904\">\n          <svg width=\"16\" height=\"16\">\n            <use xlinkHref=\"#mobile-phone\"></use>\n          </svg>\n          *0904\n        </a>\n        <p className=\"phone__desc\">\n          Бесплатно для абонентов\n          <br />\n          МТС, Билайн, Мегафон, Теле2\n        </p>\n      </div>\n      <div className=\"footer__phone phone\">\n        <a\n          className=\"phone__title\"\n          href=\"tel:+78001112233\">\n          <svg width=\"16\" height=\"16\">\n            <use xlinkHref=\"#landline-phone\"></use>\n          </svg>\n          8 800 111 22 33\n        </a>\n        <p className=\"phone__desc\">\n          Бесплатный для всех\n          <br />\n          городов России\n        </p>\n      </div>\n      <ul className=\"footer__socials socials\">\n        <li className=\"socials__item\">\n          <a className=\"socials__link\" href=\"#\">\n            <svg width=\"9\" height=\"16\">\n              <use xlinkHref=\"#fb\"></use>\n            </svg>\n            Ссылка на страницу Лого Банк в Facebook\n          </a>\n        </li>\n        <li className=\"socials__item\">\n          <a className=\"socials__link\" href=\"#\">\n            <svg width=\"16\" height=\"16\">\n              <use xlinkHref=\"#inst\"></use>\n            </svg>\n            Ссылка на страницу Лого Банк в Instagram\n          </a>\n        </li>\n        <li className=\"socials__item\">\n          <a className=\"socials__link\" href=\"#\">\n            <svg width=\"16\" height=\"13\">\n              <use xlinkHref=\"#twit\"></use>\n            </svg>\n            Ссылка на страницу Лого Банк в Twitter\n          </a>\n        </li>\n        <li className=\"socials__item\">\n          <a className=\"socials__link\" href=\"#\">\n            <svg width=\"16\" height=\"13\">\n              <use xlinkHref=\"#yt\"></use>\n            </svg>\n            Ссылка на страницу Лого Банк в Youtube\n          </a>\n        </li>\n      </ul>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\n\nimport logoImg from '../../assets/img/logo.svg';\n\nconst Header = () => (\n  <header className=\"page__header header\">\n    <div className=\"container\">\n      <a className=\"header__logo logo\" href=\"/\">\n        <img className=\"logo__img\" src={logoImg} alt=\"Логотип банка - Лига Банк\" width=\"150\" height=\"27\" />\n      </a>\n      <nav className=\"header__nav main-nav\">\n        <ul className=\"main-nav__list\">\n          <li className=\"main-nav__item\">\n            <a className=\"main-nav__link\" href=\"#\">\n              Услуги\n            </a>\n          </li>\n          <li className=\"main-nav__item\">\n            <a className=\"main-nav__link\" href=\"#\">\n              Рассчитать кредит\n            </a>\n          </li>\n          <li className=\"main-nav__item\">\n            <a className=\"main-nav__link main-nav__link--active\" href=\"#\">\n              Конвертер валют\n            </a>\n          </li>\n          <li className=\"main-nav__item\">\n            <a className=\"main-nav__link\" href=\"#\">\n              Контакты\n            </a>\n          </li>\n          <li className=\"main-nav__item\">\n            <a className=\"main-nav__link\" href=\"#\">\n              Задать вопрос\n            </a>\n          </li>\n        </ul>\n        <a className=\"main-nav__link main-nav__login\" href=\"#\">\n          <svg width=\"20\" height=\"22\">\n            <use xlinkHref=\"#login\"></use>\n          </svg>\n          Войти в Интернет-банк\n        </a>\n      </nav>\n    </div>\n  </header>\n);\n\nexport default Header;\n","export const getHaveValue = (state) => state.converter.have.value;\nexport const getHaveCurrency = (state) => state.converter.have.currency;\nexport const getWantValue = (state) => state.converter.want.value;\nexport const getWantCurrency = (state) => state.converter.want.currency;\nexport const getDate = (state) => state.converter.date;\nexport const getHistory = (state) => state.converter.history;\nexport const getLoaded = (state) => state.converter.loaded;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {CURRENCIES} from '../../const';\n\nconst CurrencyInput = ({\n  additionalClass = ``,\n  title = `Выбор валюты`,\n  value,\n  onValueChange,\n  currency,\n  onCurrencyChange,\n  disabled = false\n}) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  return (\n    <div className={`currency-input ${additionalClass}`}>\n      <label className=\"currency-input__label\">\n        {title}\n        <input\n          className=\"currency-input__value\"\n          type=\"number\"\n          value={value || ``}\n          onChange={(evt) => {\n            onValueChange(+evt.target.value);\n          }}\n          placeholder=\"Введите значение\"\n          disabled={disabled}\n        />\n      </label>\n      <button\n        className={`currency-input__button${isMenuOpen ? ` currency-input__button--active` : ``}`}\n        type=\"button\"\n        aria-label=\"Открыть меню выбора валюты\"\n        onClick={() => {\n          setIsMenuOpen((current) => !current);\n        }}\n        disabled={disabled}\n      >\n        {currency}\n      </button>\n      <ul className={`currency-input__list${isMenuOpen ? ` currency-input__list--active` : ``}`}>\n        {\n          CURRENCIES.map((item, index) => (\n            <li className=\"currency-input__item\" key={`currency-${index}`}>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  onCurrencyChange(item);\n                  setIsMenuOpen((current) => !current);\n                }}\n              >\n                {item}\n              </button>\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nCurrencyInput.propTypes = {\n  additionalClass: PropTypes.string,\n  title: PropTypes.string,\n  value: PropTypes.number.isRequired,\n  onValueChange: PropTypes.func.isRequired,\n  currency: PropTypes.string.isRequired,\n  onCurrencyChange: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n};\n\nexport default CurrencyInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst DAYS_RANGE = 7;\n\nconst Calendar = ({\n  additionalClass = ``,\n  date,\n  onDateChange,\n  disabled = false\n}) => {\n  const maxDate = new Date();\n  const minDate = new Date().setDate(maxDate.getDate() - DAYS_RANGE);\n\n  return (\n    <DatePicker\n      wrapperClassName={`calendar__input ${additionalClass}`}\n      selected={new Date(date)}\n      onChange={onDateChange}\n      dateFormat=\"dd.MM.yyyy\"\n      minDate={minDate}\n      maxDate={maxDate}\n      disabled={disabled}\n    />\n  );\n};\n\nCalendar.propTypes = {\n  additionalClass: PropTypes.string,\n  date: PropTypes.number.isRequired,\n  onDateChange: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n};\n\nexport default Calendar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({\n  children = ``,\n  additionalClass = ``,\n  onClick = () => {},\n  disabled = false\n}) => (\n  <button\n    className={`button ${additionalClass}`}\n    onClick={onClick}\n    type=\"button\"\n    disabled={disabled}\n  >\n    {children}\n  </button>\n);\n\nButton.propTypes = {\n  children: PropTypes.string,\n  additionalClass: PropTypes.string,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool\n};\n\nexport default React.memo(Button);\n","import PropTypes from 'prop-types';\n\nimport {CURRENCIES} from './const';\n\nconst currencyInputPropTypes = {\n  currency: PropTypes.oneOf(CURRENCIES).isRequired,\n  value: PropTypes.number.isRequired\n};\n\nexport const orderPropTypes = {\n  date: PropTypes.number.isRequired,\n  have: PropTypes.shape(currencyInputPropTypes).isRequired,\n  want: PropTypes.shape(currencyInputPropTypes).isRequired,\n  key: PropTypes.string.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {orderPropTypes} from '../../prop-types.prop';\n\nconst DATE_OPTIONS = {\n  day: `numeric`,\n  month: `numeric`,\n  year: `numeric`\n};\n\nconst HistoryItem = ({\n  date,\n  have,\n  want\n}) => {\n  const dateObj = new Date(date);\n\n  return (\n    <li className=\"history__item\">\n      <time\n        className=\"history__date\"\n        dateTime={dateObj.toISOString()}\n      >\n        {dateObj.toLocaleString(`ru-RU`, DATE_OPTIONS)}\n      </time>\n      <span className=\"history__from\"><span>{have.value}</span> {have.currency}</span>\n      <span className=\"history__to\"><span>{want.value}</span> {want.currency}</span>\n    </li>\n  );\n};\n\nHistoryItem.propTypes = PropTypes.shape(orderPropTypes).isRequired;\n\nexport default React.memo(HistoryItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {orderPropTypes} from '../../prop-types.prop';\n\nimport HistoryItem from '../history-item/history-item';\n\nconst HistoryList = ({\n  orders\n}) => (\n  <ul className=\"history__list\">\n    {orders.map((order) => <HistoryItem {...order} key={order.key} />)}\n  </ul>\n);\n\nHistoryList.propTypes = {\n  orders: PropTypes.arrayOf(PropTypes.shape(orderPropTypes)).isRequired\n};\n\nexport default HistoryList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {orderPropTypes} from '../../prop-types.prop';\n\nimport Button from '../button/button';\nimport HistoryList from '../history-list/history-list';\n\nconst History = ({\n  additionalClass = ``,\n  history,\n  onClearButtonClick\n}) => {\n  const isEmpty = history.length === 0;\n\n  return (\n    <div className={`history ${isEmpty ? `history--empty` : ``} ${additionalClass}`}>\n      <h3 className=\"history__title\">История конвертация</h3>\n      {\n        isEmpty ?\n          <h4 className=\"history__empty-message\">Похоже в истории конвертаций нет ни одной записи</h4> :\n          <HistoryList orders={history} />\n      }\n      <Button\n        additionalClass=\"history__button\"\n        onClick={onClearButtonClick}\n        disabled={isEmpty}\n      >\n        Очистить историю\n      </Button>\n    </div>\n  );\n};\n\nHistory.propTypes = {\n  additionalClass: PropTypes.string,\n  history: PropTypes.arrayOf(PropTypes.shape(orderPropTypes)).isRequired,\n  onClearButtonClick: PropTypes.func.isRequired\n};\n\nexport default History;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport {Statuses} from '../../services/load-statuses';\n\nimport {getHaveValue, getHaveCurrency, getWantValue, getWantCurrency, getDate, getHistory, getLoaded} from '../../store/converter/selectors';\nimport {setHaveCurrency, setHaveValue, setWantCurrency, setWantValue, addOrder, clearHistory} from '../../store/converter/actions';\nimport {loadRates} from '../../store/converter/operations';\n\nimport CurrencyInput from '../currency-input/currency-input';\nimport Calendar from '../calendar/calendar';\nimport Button from '../button/button';\nimport History from '../history/history';\n\nconst Converter = ({\n  haveValue,\n  onHaveValueChange,\n  haveCurrency,\n  onHaveCurrencyChange,\n  wantValue,\n  onWantValueChange,\n  wantCurrency,\n  onWantCurrencyChange,\n  date,\n  onDateChange,\n  history,\n  onSaveButtonClick,\n  onClearButtonClick,\n  loaded\n}) => {\n  const isLoadedCorrectly = loaded === Statuses.LOADED;\n  const isErrored = loaded === Statuses.ERROR;\n\n  return (\n    <section className=\"converter\">\n      <div className=\"container\">\n        <h2 className=\"converter__title\">Конвертер валют</h2>\n        {\n          isErrored ?\n            <span className=\"converter__error-message\">При получении данных произошла ошибка Попробуйте обновить страницу</span> : ``\n        }\n        <form className=\"converter__form\" action=\"#\" method=\"get\">\n          <CurrencyInput\n            additionalClass=\"converter__currency-input\"\n            title=\"У меня есть\"\n            value={haveValue}\n            onValueChange={onHaveValueChange}\n            currency={haveCurrency}\n            onCurrencyChange={onHaveCurrencyChange}\n            disabled={!isLoadedCorrectly}\n          />\n          <CurrencyInput\n            additionalClass=\"converter__currency-input\"\n            title=\"Хочу приобрести\"\n            value={wantValue}\n            onValueChange={onWantValueChange}\n            currency={wantCurrency}\n            onCurrencyChange={onWantCurrencyChange}\n            disabled={!isLoadedCorrectly}\n          />\n          <Calendar\n            additionalClass=\"converter__calendar\"\n            date={date}\n            onDateChange={onDateChange}\n            disabled={!isLoadedCorrectly}\n          />\n          <Button\n            additionalClass=\"converter__button\"\n            onClick={onSaveButtonClick}\n            disabled={!isLoadedCorrectly}\n          >\n            Сохранить результат\n          </Button>\n        </form>\n        <History\n          additionalClass=\"converter__history\"\n          history={history}\n          onClearButtonClick={onClearButtonClick}\n        />\n      </div>\n    </section>\n  );\n};\n\nConverter.propTypes = {\n  haveValue: PropTypes.number.isRequired,\n  onHaveValueChange: PropTypes.func.isRequired,\n  haveCurrency: PropTypes.string.isRequired,\n  onHaveCurrencyChange: PropTypes.func.isRequired,\n  wantValue: PropTypes.number.isRequired,\n  onWantValueChange: PropTypes.func.isRequired,\n  wantCurrency: PropTypes.string.isRequired,\n  onWantCurrencyChange: PropTypes.func.isRequired,\n  date: PropTypes.number.isRequired,\n  onDateChange: PropTypes.func.isRequired,\n  history: PropTypes.array.isRequired,\n  onSaveButtonClick: PropTypes.func.isRequired,\n  onClearButtonClick: PropTypes.func.isRequired,\n  loaded: PropTypes.oneOf(Object.values(Statuses)).isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  haveValue: getHaveValue(state),\n  haveCurrency: getHaveCurrency(state),\n  wantValue: getWantValue(state),\n  wantCurrency: getWantCurrency(state),\n  date: getDate(state),\n  history: getHistory(state),\n  loaded: getLoaded(state)\n});\n\nconst mapDispatchToProps = {\n  onDateChange: loadRates,\n  onHaveValueChange: setHaveValue,\n  onHaveCurrencyChange: setHaveCurrency,\n  onWantValueChange: setWantValue,\n  onWantCurrencyChange: setWantCurrency,\n  onSaveButtonClick: addOrder,\n  onClearButtonClick: clearHistory\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Converter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Link = ({\n  children = ``,\n  additionalClass = ``,\n  href = `#`\n}) => (\n  <a\n    className={`link ${additionalClass}`}\n    href={href}>\n    {children}\n  </a>\n);\n\nLink.propTypes = {\n  children: PropTypes.string,\n  additionalClass: PropTypes.string,\n  href: PropTypes.string\n};\n\nexport default Link;\n","import React from 'react';\nimport Link from '../link/link';\n\nconst Promo = () => (\n  <section className=\"promo\">\n    <div className=\"container\">\n      <h2 className=\"promo__title\">Лига Банк</h2>\n      <h3 className=\"promo__slogan\">Кредиты на любой случай</h3>\n      <Link additionalClass=\"promo__link\">Рассчитать кредит</Link>\n    </div>\n  </section>\n);\n\nexport default Promo;\n","import React from 'react';\nimport Converter from '../converter/converter';\nimport Promo from '../promo/promo';\n\nconst Main = () => (\n  <main className=\"page__main\">\n    <h1 className=\"visually-hidden\">Лига банк - страница &quot;Конвертер валют&quot;</h1>\n    <Promo />\n    <Converter />\n  </main>\n);\n\nexport default Main;\n","import React from 'react';\n\nimport Footer from '../footer/footer';\nimport Header from '../header/header';\nimport Main from '../main/main';\n\nconst App = () => (\n  <div className=\"page\">\n    <Header />\n    <Main />\n    <Footer />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport store from './store/store';\nimport {loadRates} from './store/converter/operations';\n\nimport App from './components/app/app';\n\nimport './sass/style.scss';\n\nstore.dispatch(loadRates(Date.now()));\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(`root`)\n);\n"],"sourceRoot":""}